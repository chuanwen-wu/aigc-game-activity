kind: Deployment
apiVersion: apps/v1
metadata:
  name: stable-diffusion
  # namespace: stable-diffusion

spec:
  replicas: 2
  selector:
     matchLabels:
      app.kubernetes.io/instance: stable-diffusion
      app.kubernetes.io/name: stable-diffusion
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: stable-diffusion
        app.kubernetes.io/name: stable-diffusion
    spec:
      nodeSelector:
        eks/node-type: gpu
        karpenter.sh/provisioner-name: "gpu-bottlerocket"
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      containers:
      - name: stable-diffusion-webui
        image: 733851053666.dkr.ecr.ap-northeast-1.amazonaws.com/sd-game-activity:0.1-init
        resources:
          limits:
            nvidia.com/gpu: 1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        volumeMounts:
        - mountPath: /app/datadir
          name: stable-diffusion-model-store
        env:
        - name: ckpt_dir
          value: /app/datadir/Stable-diffusion
        - name: lora_dir
          value: /app/datadir/Lora
        - name: controlnet_dir
          value: /app/datadir/ControlNet
        - name: auto_exit
          value: ''
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: stable-diffusion-model-store
        persistentVolumeClaim:
          claimName: stable-diffusion-datadir

---
apiVersion: v1
kind: Service
metadata:
  # namespace: stable-diffusion
  name: stable-diffusion
spec:
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  type: NodePort
  selector:
     app.kubernetes.io/instance: stable-diffusion
     app.kubernetes.io/name: stable-diffusion